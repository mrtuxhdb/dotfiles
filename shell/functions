#!/bin/bash
# ~/.shell_functions
# Last Modified: Sun 06 Jan 2013 02:46:44 AM ICT

# fix slow gvim start
function gvim () { (/usr/bin/gvim -f "$@" &) }

# forwarded port ${2} on server to ${1} on the local (client)
# Usage: ssh_tunnel 5900 5901 mrtux@hdvietnam
function ssh_tunnel () {
    ssh -L ${1}:localhost:${2} -N -f ${3}
}

# create SOCKS 5 proxy on local (client) at port {1}
# Usage: create_ssh_proxy_at_port 9999 mrtux@hdvietnam
function create_ssh_proxy_at_port () {
    ssh -f -C2qTnN -D ${1} ${2}
}

# clipboard - put the arguments on the clipboard if we have xsel or xclip
# Usage : clipboard <something>
function clipboard () {
    if [ $DISPLAY ]; then
        { which xsel >/dev/null 2>/dev/null && echo -n "$@" | xsel; } \
        || { which xclip >/dev/null 2>/dev/null && echo -n "$@" | xclip; } \
        || echo "Haven't copied to the clipboard: no xsel or xclip" >&2
    else
        echo "Haven't copied to the clipboard: no \$DISPLAY" >&2
    fi
}

# bashlogger
function bashlogger () {
    script /tmp/log.txt
}

# vpnbook_password
function vpnbook_password () {
    VPNBOOK_DAILY_PASSWORD=$(curl -s http://www.vpnbook.com | grep -m 1 Password | cut -d ':' -f 2 | cut -d '<' -f 1 | tr -d ' ')
    echo "VPNBook current password: $VPNBOOK_DAILY_PASSWORD"
    clipboard $VPNBOOK_DAILY_PASSWORD
}

# Upgrade GitLab using upgrader
function upgrade_gitlab () {
    cd /home/git/gitlab
    sudo -u git -H bundle exec rake gitlab:backup:create RAILS_ENV=production
    sudo service gitlab stop
    if [ -f bin/upgrade.rb ]; then
        sudo -u git -H ruby bin/upgrade.rb -y
    else
        sudo -u git -H ruby script/upgrade.rb -y
    fi
    sudo service gitlab start
    sudo service nginx restart
    sudo -u git -H bundle exec rake gitlab:check RAILS_ENV=production
}

# End of file

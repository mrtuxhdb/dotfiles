#!/bin/bash
# ~/.shell_functions
# Last Modified: 07/05/2015 05:33 AM

# fix slow gvim start
gvim () { (/usr/bin/gvim -f "$@" &) }

# forwarded port ${2} on server to ${1} on the local (client)
# Usage: ssh_tunnel 5900 5901 mrtux@hdvietnam
ssh_tunnel () {
    ssh -L "${1}":localhost:"${2}" -N -f "${3}"
}

# create SOCKS 5 proxy on local (client) at port {1}
# Usage: create_ssh_proxy_at_port 9999 mrtux@hdvietnam
create_ssh_proxy_at_port () {
    ssh -f -C2qTnN -D "${1}" "${2}"
}

# Get information about IP address
ipinfo () {
    curl -s ipinfo.io/"${1}"
}

# Lookup MAC vendor
macvendorlookup () {
    curl -s "http://www.macvendorlookup.com/api/v2/$*" | jq '.[] | .company'
    # curl -s "http://api.macvendors.com/$*"
}

### OpenSSL shortcut ###
openssl-view-certificate () {
    openssl x509 -text -noout -in "${1}"
}

openssl-view-csr () {
    openssl req -text -noout -verify -in "${1}"
}

openssl-view-key () {
    openssl rsa -check -in "${1}"
}

openssl-view-pkcs12 () {
    openssl pkcs12 -info -in "${1}"
}

# Connecting to a server (Ctrl C exits)
openssl-client () {
    openssl s_client -status -connect "${1}":443
}

# Convert PEM private key, PEM certificate and PEM CA certificate (used by nginx, Apache, and other openssl apps) to a PKCS12 file (typically for use with Windows or Tomcat)
openssl-convert-pem-to-p12 () {
    openssl pkcs12 -export -inkey "${1}" -in "${2}" -certfile "${3}" -out "${4}"
}

# Convert a PKCS12 file to PEM
openssl-convert-p12-to-pem () {
    openssl pkcs12 -nodes -in "${1}" -out "${2}"
}

# Check the modulus of a certificate (to see if it matches a key)
openssl-check-certificate-modulus () {
    openssl x509 -noout -modulus -in "${1}" | shasum -a 256
}

# Check the modulus of a key (to see if it matches a certificate)
openssl-check-key-modulus () {
    openssl rsa -noout -modulus -in "${1}" | shasum -a 256
}

# Check the modulus of a certificate request
openssl-check-key-modulus () {
    openssl req -noout -modulus -in "${1}" | shasum -a 256
}

# Encrypt a file (because zip crypto isn't secure)
openssl-encrypt () {
    openssl aes-256-cbc -salt -in "${1}" -out "${2}"
}

# Decrypt a file
openssl-decrypt () {
    openssl aes-256-cbc -d -in "${1}" -out "${2}"
}

weather () {
    curl -4 http://wttr.in/sgn #HCM
    #curl -4 http://wttr.in/han #HN
}

# bashlogger
bashlogger () {
    script /tmp/log.txt
}

install-docker-compose () {
    fname="docker-compose-$(uname -s)-$(uname -m)"
    fbin="/home/mrtux/.local/bin/docker-compose"
    repos_dl="https://github.com/docker/compose/releases/download"
    repos_api="https://api.github.com/repos/docker/compose/releases/latest"
    version=$(curl -sSL $repos_api | jq -r '. | .tag_name')
    /bin/rm -f "$fbin"
    curl -sSL $repos_dl/"$version"/"$fname" -o "$fbin"
    chmod +x $fbin
}


# End of file
